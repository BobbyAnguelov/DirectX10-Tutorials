//
// FX Version: fx_4_0
// Child effect (requires effect pool): false
//
// 1 local buffer(s)
//
cbuffer $Globals
{
    float4x4 World;                     // Offset:    0, size:   64
    float4x4 View;                      // Offset:   64, size:   64
    float4x4 Projection;                // Offset:  128, size:   64
    DirectionalLight light;             // Offset:  192, size:   28
    Material material;                  // Offset:  224, size:   16
    float4  ambientLight;               // Offset:  240, size:   16
    float3  eye;                        // Offset:  256, size:   12
}

//
// 3 local object(s)
//
Texture2D colorMap;
SamplerState linearSampler
{
    Filter   = uint(MIN_MAG_MIP_LINEAR /* 21 */);
    AddressU = uint(CLAMP /* 3 */);
    AddressV = uint(CLAMP /* 3 */);
    MaxAnisotropy = uint(16);
};
RasterizerState rsSolid
{
    FillMode = uint(SOLID /* 3 */);
    CullMode = uint(NONE /* 1 */);
    FrontCounterClockwise = bool(FALSE /* false */);
};

//
// 5 technique(s)
//
technique10 RENDER
{
    pass P0
    {
        VertexShader = asm {
            //
            // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
            //
            //
            // Buffer Definitions: 
            //
            // cbuffer $Globals
            // {
            //
            //   float4x4 World;                    // Offset:    0 Size:    64
            //   float4x4 View;                     // Offset:   64 Size:    64
            //   float4x4 Projection;               // Offset:  128 Size:    64
            //   
            //   struct
            //   {
            //       
            //       float4 color;                  // Offset:  192
            //       float3 dir;                    // Offset:  208
            //
            //   } light;                           // Offset:  192 Size:    28 [unused]
            //   
            //   struct
            //   {
            //       
            //       float Ka;                      // Offset:  224
            //       float Kd;                      // Offset:  228
            //       float Ks;                      // Offset:  232
            //       float A;                       // Offset:  236
            //
            //   } material;                        // Offset:  224 Size:    16 [unused]
            //   float4 ambientLight;               // Offset:  240 Size:    16 [unused]
            //   float3 eye;                        // Offset:  256 Size:    12 [unused]
            //
            // }
            //
            //
            // Resource Bindings:
            //
            // Name                                 Type  Format         Dim Slot Elements
            // ------------------------------ ---------- ------- ----------- ---- --------
            // $Globals                          cbuffer      NA          NA    0        1
            //
            //
            //
            // Input signature:
            //
            // Name                 Index   Mask Register SysValue Format   Used
            // -------------------- ----- ------ -------- -------- ------ ------
            // POSITION                 0   xyzw        0     NONE  float   xyzw
            // TEXCOORD                 0   xy          1     NONE  float   xy  
            // NORMAL                   0   xyz         2     NONE  float   xyz 
            //
            //
            // Output signature:
            //
            // Name                 Index   Mask Register SysValue Format   Used
            // -------------------- ----- ------ -------- -------- ------ ------
            // SV_POSITION              0   xyzw        0      POS  float   xyzw
            // POSITION                 0   xyzw        1     NONE  float   xyzw
            // TEXCOORD                 0   xy          2     NONE  float   xy  
            // TEXCOORD                 1   xyz         3     NONE  float   xyz 
            //
            vs_4_0
            dcl_constantbuffer cb0[12], immediateIndexed
            dcl_input v0.xyzw
            dcl_input v1.xy
            dcl_input v2.xyz
            dcl_output_siv o0.xyzw, position
            dcl_output o1.xyzw
            dcl_output o2.xy
            dcl_output o3.xyz
            dcl_temps 2
            dp4 r0.x, v0.xyzw, cb0[0].xyzw
            dp4 r0.y, v0.xyzw, cb0[1].xyzw
            dp4 r0.z, v0.xyzw, cb0[2].xyzw
            dp4 r0.w, v0.xyzw, cb0[3].xyzw
            dp4 r1.x, r0.xyzw, cb0[4].xyzw
            dp4 r1.y, r0.xyzw, cb0[5].xyzw
            dp4 r1.z, r0.xyzw, cb0[6].xyzw
            dp4 r1.w, r0.xyzw, cb0[7].xyzw
            mov o1.xyzw, r0.xyzw
            dp4 o0.x, r1.xyzw, cb0[8].xyzw
            dp4 o0.y, r1.xyzw, cb0[9].xyzw
            dp4 o0.z, r1.xyzw, cb0[10].xyzw
            dp4 o0.w, r1.xyzw, cb0[11].xyzw
            mov o2.xy, v1.xyxx
            dp3 r0.x, v2.xyzx, cb0[0].xyzx
            dp3 r0.y, v2.xyzx, cb0[1].xyzx
            dp3 r0.z, v2.xyzx, cb0[2].xyzx
            dp3 r0.w, r0.xyzx, r0.xyzx
            rsq r0.w, r0.w
            mul o3.xyz, r0.wwww, r0.xyzx
            ret 
            // Approximately 21 instruction slots used
                    
        };
        GeometryShader = NULL;
        PixelShader = asm {
            //
            // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
            //
            //
            // Buffer Definitions: 
            //
            // cbuffer $Globals
            // {
            //
            //   float4x4 World;                    // Offset:    0 Size:    64 [unused]
            //   float4x4 View;                     // Offset:   64 Size:    64 [unused]
            //   float4x4 Projection;               // Offset:  128 Size:    64 [unused]
            //   
            //   struct
            //   {
            //       
            //       float4 color;                  // Offset:  192
            //       float3 dir;                    // Offset:  208
            //
            //   } light;                           // Offset:  192 Size:    28
            //   
            //   struct
            //   {
            //       
            //       float Ka;                      // Offset:  224
            //       float Kd;                      // Offset:  228
            //       float Ks;                      // Offset:  232
            //       float A;                       // Offset:  236
            //
            //   } material;                        // Offset:  224 Size:    16
            //   float4 ambientLight;               // Offset:  240 Size:    16
            //   float3 eye;                        // Offset:  256 Size:    12
            //
            // }
            //
            //
            // Resource Bindings:
            //
            // Name                                 Type  Format         Dim Slot Elements
            // ------------------------------ ---------- ------- ----------- ---- --------
            // $Globals                          cbuffer      NA          NA    0        1
            //
            //
            //
            // Input signature:
            //
            // Name                 Index   Mask Register SysValue Format   Used
            // -------------------- ----- ------ -------- -------- ------ ------
            // SV_POSITION              0   xyzw        0      POS  float       
            // POSITION                 0   xyzw        1     NONE  float   xyz 
            // TEXCOORD                 0   xy          2     NONE  float       
            // TEXCOORD                 1   xyz         3     NONE  float   xyz 
            //
            //
            // Output signature:
            //
            // Name                 Index   Mask Register SysValue Format   Used
            // -------------------- ----- ------ -------- -------- ------ ------
            // SV_Target                0   xyzw        0   TARGET  float   xyzw
            //
            ps_4_0
            dcl_constantbuffer cb0[17], immediateIndexed
            dcl_input_ps linear v1.xyz
            dcl_input_ps linear v3.xyz
            dcl_output o0.xyzw
            dcl_temps 3
            add r0.xyz, -v1.xyzx, cb0[16].xyzx
            dp3 r0.w, r0.xyzx, r0.xyzx
            rsq r0.w, r0.w
            mul r0.xyz, r0.wwww, r0.xyzx
            dp3 r0.w, v3.xyzx, v3.xyzx
            rsq r0.w, r0.w
            mul r1.xyz, r0.wwww, v3.xyzx
            dp3 r0.w, cb0[13].xyzx, r1.xyzx
            add r0.w, r0.w, r0.w
            mad r2.xyz, r1.xyzx, -r0.wwww, cb0[13].xyzx
            dp3_sat r0.w, r1.xyzx, -cb0[13].xyzx
            dp3_sat r0.x, r2.xyzx, r0.xyzx
            log r0.x, r0.x
            mul r0.x, r0.x, cb0[14].w
            exp r0.x, r0.x
            mul r0.x, r0.x, cb0[14].z
            mad r0.x, cb0[14].y, r0.w, r0.x
            mul r0.xyzw, r0.xxxx, cb0[12].xyzw
            mad o0.xyzw, cb0[14].xxxx, cb0[15].xyzw, r0.xyzw
            ret 
            // Approximately 20 instruction slots used
                    
        };
        RasterizerState = rsSolid;
    }

}

technique10 RENDER_VL_PHONG
{
    pass P0
    {
        VertexShader = asm {
            //
            // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
            //
            //
            // Buffer Definitions: 
            //
            // cbuffer $Globals
            // {
            //
            //   float4x4 World;                    // Offset:    0 Size:    64
            //   float4x4 View;                     // Offset:   64 Size:    64
            //   float4x4 Projection;               // Offset:  128 Size:    64
            //   
            //   struct
            //   {
            //       
            //       float4 color;                  // Offset:  192
            //       float3 dir;                    // Offset:  208
            //
            //   } light;                           // Offset:  192 Size:    28
            //   
            //   struct
            //   {
            //       
            //       float Ka;                      // Offset:  224
            //       float Kd;                      // Offset:  228
            //       float Ks;                      // Offset:  232
            //       float A;                       // Offset:  236
            //
            //   } material;                        // Offset:  224 Size:    16
            //   float4 ambientLight;               // Offset:  240 Size:    16
            //   float3 eye;                        // Offset:  256 Size:    12
            //
            // }
            //
            //
            // Resource Bindings:
            //
            // Name                                 Type  Format         Dim Slot Elements
            // ------------------------------ ---------- ------- ----------- ---- --------
            // $Globals                          cbuffer      NA          NA    0        1
            //
            //
            //
            // Input signature:
            //
            // Name                 Index   Mask Register SysValue Format   Used
            // -------------------- ----- ------ -------- -------- ------ ------
            // POSITION                 0   xyzw        0     NONE  float   xyzw
            // TEXCOORD                 0   xy          1     NONE  float   xy  
            // NORMAL                   0   xyz         2     NONE  float   xyz 
            //
            //
            // Output signature:
            //
            // Name                 Index   Mask Register SysValue Format   Used
            // -------------------- ----- ------ -------- -------- ------ ------
            // SV_POSITION              0   xyzw        0      POS  float   xyzw
            // TEXCOORD                 0   xy          1     NONE  float   xy  
            // COLOR                    0   xyzw        2     NONE  float   xyzw
            //
            vs_4_0
            dcl_constantbuffer cb0[17], immediateIndexed
            dcl_input v0.xyzw
            dcl_input v1.xy
            dcl_input v2.xyz
            dcl_output_siv o0.xyzw, position
            dcl_output o1.xy
            dcl_output o2.xyzw
            dcl_temps 3
            dp4 r0.w, v0.xyzw, cb0[3].xyzw
            dp4 r0.x, v0.xyzw, cb0[0].xyzw
            dp4 r0.y, v0.xyzw, cb0[1].xyzw
            dp4 r0.z, v0.xyzw, cb0[2].xyzw
            dp4 r1.x, r0.xyzw, cb0[4].xyzw
            dp4 r1.y, r0.xyzw, cb0[5].xyzw
            dp4 r1.z, r0.xyzw, cb0[6].xyzw
            dp4 r1.w, r0.xyzw, cb0[7].xyzw
            add r0.xyz, -r0.xyzx, cb0[16].xyzx
            dp4 o0.x, r1.xyzw, cb0[8].xyzw
            dp4 o0.y, r1.xyzw, cb0[9].xyzw
            dp4 o0.z, r1.xyzw, cb0[10].xyzw
            dp4 o0.w, r1.xyzw, cb0[11].xyzw
            mov o1.xy, v1.xyxx
            dp3 r0.w, r0.xyzx, r0.xyzx
            rsq r0.w, r0.w
            mul r0.xyz, r0.wwww, r0.xyzx
            dp3 r1.x, v2.xyzx, cb0[0].xyzx
            dp3 r1.y, v2.xyzx, cb0[1].xyzx
            dp3 r1.z, v2.xyzx, cb0[2].xyzx
            dp3 r0.w, r1.xyzx, r1.xyzx
            rsq r0.w, r0.w
            mul r1.xyz, r0.wwww, r1.xyzx
            dp3 r0.w, cb0[13].xyzx, r1.xyzx
            add r0.w, r0.w, r0.w
            mad r2.xyz, r1.xyzx, -r0.wwww, cb0[13].xyzx
            dp3_sat r0.w, r1.xyzx, -cb0[13].xyzx
            dp3_sat r0.x, r2.xyzx, r0.xyzx
            log r0.x, r0.x
            mul r0.x, r0.x, cb0[14].w
            exp r0.x, r0.x
            mul r0.x, r0.x, cb0[14].z
            mad r0.x, cb0[14].y, r0.w, r0.x
            mul r0.xyzw, r0.xxxx, cb0[12].xyzw
            mad o2.xyzw, cb0[14].xxxx, cb0[15].xyzw, r0.xyzw
            ret 
            // Approximately 36 instruction slots used
                    
        };
        GeometryShader = NULL;
        PixelShader = asm {
            //
            // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
            //
            //
            //
            // Input signature:
            //
            // Name                 Index   Mask Register SysValue Format   Used
            // -------------------- ----- ------ -------- -------- ------ ------
            // SV_POSITION              0   xyzw        0      POS  float       
            // TEXCOORD                 0   xy          1     NONE  float       
            // COLOR                    0   xyzw        2     NONE  float   xyzw
            //
            //
            // Output signature:
            //
            // Name                 Index   Mask Register SysValue Format   Used
            // -------------------- ----- ------ -------- -------- ------ ------
            // SV_Target                0   xyzw        0   TARGET  float   xyzw
            //
            ps_4_0
            dcl_input_ps linear v2.xyzw
            dcl_output o0.xyzw
            mov o0.xyzw, v2.xyzw
            ret 
            // Approximately 2 instruction slots used
                    
        };
        RasterizerState = rsSolid;
    }

}

technique10 RENDER_VL_BLINNPHONG
{
    pass P0
    {
        VertexShader = asm {
            //
            // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
            //
            //
            // Buffer Definitions: 
            //
            // cbuffer $Globals
            // {
            //
            //   float4x4 World;                    // Offset:    0 Size:    64
            //   float4x4 View;                     // Offset:   64 Size:    64
            //   float4x4 Projection;               // Offset:  128 Size:    64
            //   
            //   struct
            //   {
            //       
            //       float4 color;                  // Offset:  192
            //       float3 dir;                    // Offset:  208
            //
            //   } light;                           // Offset:  192 Size:    28
            //   
            //   struct
            //   {
            //       
            //       float Ka;                      // Offset:  224
            //       float Kd;                      // Offset:  228
            //       float Ks;                      // Offset:  232
            //       float A;                       // Offset:  236
            //
            //   } material;                        // Offset:  224 Size:    16
            //   float4 ambientLight;               // Offset:  240 Size:    16
            //   float3 eye;                        // Offset:  256 Size:    12
            //
            // }
            //
            //
            // Resource Bindings:
            //
            // Name                                 Type  Format         Dim Slot Elements
            // ------------------------------ ---------- ------- ----------- ---- --------
            // $Globals                          cbuffer      NA          NA    0        1
            //
            //
            //
            // Input signature:
            //
            // Name                 Index   Mask Register SysValue Format   Used
            // -------------------- ----- ------ -------- -------- ------ ------
            // POSITION                 0   xyzw        0     NONE  float   xyzw
            // TEXCOORD                 0   xy          1     NONE  float   xy  
            // NORMAL                   0   xyz         2     NONE  float   xyz 
            //
            //
            // Output signature:
            //
            // Name                 Index   Mask Register SysValue Format   Used
            // -------------------- ----- ------ -------- -------- ------ ------
            // SV_POSITION              0   xyzw        0      POS  float   xyzw
            // TEXCOORD                 0   xy          1     NONE  float   xy  
            // COLOR                    0   xyzw        2     NONE  float   xyzw
            //
            vs_4_0
            dcl_constantbuffer cb0[17], immediateIndexed
            dcl_input v0.xyzw
            dcl_input v1.xy
            dcl_input v2.xyz
            dcl_output_siv o0.xyzw, position
            dcl_output o1.xy
            dcl_output o2.xyzw
            dcl_temps 2
            dp4 r0.w, v0.xyzw, cb0[3].xyzw
            dp4 r0.x, v0.xyzw, cb0[0].xyzw
            dp4 r0.y, v0.xyzw, cb0[1].xyzw
            dp4 r0.z, v0.xyzw, cb0[2].xyzw
            dp4 r1.x, r0.xyzw, cb0[4].xyzw
            dp4 r1.y, r0.xyzw, cb0[5].xyzw
            dp4 r1.z, r0.xyzw, cb0[6].xyzw
            dp4 r1.w, r0.xyzw, cb0[7].xyzw
            add r0.xyz, -r0.xyzx, cb0[16].xyzx
            dp4 o0.x, r1.xyzw, cb0[8].xyzw
            dp4 o0.y, r1.xyzw, cb0[9].xyzw
            dp4 o0.z, r1.xyzw, cb0[10].xyzw
            dp4 o0.w, r1.xyzw, cb0[11].xyzw
            mov o1.xy, v1.xyxx
            dp3 r0.w, r0.xyzx, r0.xyzx
            rsq r0.w, r0.w
            mad r0.xyz, r0.xyzx, r0.wwww, -cb0[13].xyzx
            dp3 r0.w, r0.xyzx, r0.xyzx
            rsq r0.w, r0.w
            mul r0.xyz, r0.wwww, r0.xyzx
            dp3 r1.x, v2.xyzx, cb0[0].xyzx
            dp3 r1.y, v2.xyzx, cb0[1].xyzx
            dp3 r1.z, v2.xyzx, cb0[2].xyzx
            dp3 r0.w, r1.xyzx, r1.xyzx
            rsq r0.w, r0.w
            mul r1.xyz, r0.wwww, r1.xyzx
            dp3_sat r0.x, r1.xyzx, r0.xyzx
            dp3_sat r0.y, r1.xyzx, -cb0[13].xyzx
            log r0.x, r0.x
            mul r0.x, r0.x, cb0[14].w
            exp r0.x, r0.x
            mul r0.x, r0.x, cb0[14].z
            mad r0.x, cb0[14].y, r0.y, r0.x
            mul r0.xyzw, r0.xxxx, cb0[12].xyzw
            mad o2.xyzw, cb0[14].xxxx, cb0[15].xyzw, r0.xyzw
            ret 
            // Approximately 36 instruction slots used
                    
        };
        GeometryShader = NULL;
        PixelShader = asm {
            //
            // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
            //
            //
            //
            // Input signature:
            //
            // Name                 Index   Mask Register SysValue Format   Used
            // -------------------- ----- ------ -------- -------- ------ ------
            // SV_POSITION              0   xyzw        0      POS  float       
            // TEXCOORD                 0   xy          1     NONE  float       
            // COLOR                    0   xyzw        2     NONE  float   xyzw
            //
            //
            // Output signature:
            //
            // Name                 Index   Mask Register SysValue Format   Used
            // -------------------- ----- ------ -------- -------- ------ ------
            // SV_Target                0   xyzw        0   TARGET  float   xyzw
            //
            ps_4_0
            dcl_input_ps linear v2.xyzw
            dcl_output o0.xyzw
            mov o0.xyzw, v2.xyzw
            ret 
            // Approximately 2 instruction slots used
                    
        };
        RasterizerState = rsSolid;
    }

}

technique10 RENDER_PL_PHONG
{
    pass P0
    {
        VertexShader = asm {
            //
            // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
            //
            //
            // Buffer Definitions: 
            //
            // cbuffer $Globals
            // {
            //
            //   float4x4 World;                    // Offset:    0 Size:    64
            //   float4x4 View;                     // Offset:   64 Size:    64
            //   float4x4 Projection;               // Offset:  128 Size:    64
            //   
            //   struct
            //   {
            //       
            //       float4 color;                  // Offset:  192
            //       float3 dir;                    // Offset:  208
            //
            //   } light;                           // Offset:  192 Size:    28 [unused]
            //   
            //   struct
            //   {
            //       
            //       float Ka;                      // Offset:  224
            //       float Kd;                      // Offset:  228
            //       float Ks;                      // Offset:  232
            //       float A;                       // Offset:  236
            //
            //   } material;                        // Offset:  224 Size:    16 [unused]
            //   float4 ambientLight;               // Offset:  240 Size:    16 [unused]
            //   float3 eye;                        // Offset:  256 Size:    12 [unused]
            //
            // }
            //
            //
            // Resource Bindings:
            //
            // Name                                 Type  Format         Dim Slot Elements
            // ------------------------------ ---------- ------- ----------- ---- --------
            // $Globals                          cbuffer      NA          NA    0        1
            //
            //
            //
            // Input signature:
            //
            // Name                 Index   Mask Register SysValue Format   Used
            // -------------------- ----- ------ -------- -------- ------ ------
            // POSITION                 0   xyzw        0     NONE  float   xyzw
            // TEXCOORD                 0   xy          1     NONE  float   xy  
            // NORMAL                   0   xyz         2     NONE  float   xyz 
            //
            //
            // Output signature:
            //
            // Name                 Index   Mask Register SysValue Format   Used
            // -------------------- ----- ------ -------- -------- ------ ------
            // SV_POSITION              0   xyzw        0      POS  float   xyzw
            // POSITION                 0   xyzw        1     NONE  float   xyzw
            // TEXCOORD                 0   xy          2     NONE  float   xy  
            // TEXCOORD                 1   xyz         3     NONE  float   xyz 
            //
            vs_4_0
            dcl_constantbuffer cb0[12], immediateIndexed
            dcl_input v0.xyzw
            dcl_input v1.xy
            dcl_input v2.xyz
            dcl_output_siv o0.xyzw, position
            dcl_output o1.xyzw
            dcl_output o2.xy
            dcl_output o3.xyz
            dcl_temps 2
            dp4 r0.x, v0.xyzw, cb0[0].xyzw
            dp4 r0.y, v0.xyzw, cb0[1].xyzw
            dp4 r0.z, v0.xyzw, cb0[2].xyzw
            dp4 r0.w, v0.xyzw, cb0[3].xyzw
            dp4 r1.x, r0.xyzw, cb0[4].xyzw
            dp4 r1.y, r0.xyzw, cb0[5].xyzw
            dp4 r1.z, r0.xyzw, cb0[6].xyzw
            dp4 r1.w, r0.xyzw, cb0[7].xyzw
            mov o1.xyzw, r0.xyzw
            dp4 o0.x, r1.xyzw, cb0[8].xyzw
            dp4 o0.y, r1.xyzw, cb0[9].xyzw
            dp4 o0.z, r1.xyzw, cb0[10].xyzw
            dp4 o0.w, r1.xyzw, cb0[11].xyzw
            mov o2.xy, v1.xyxx
            dp3 r0.x, v2.xyzx, cb0[0].xyzx
            dp3 r0.y, v2.xyzx, cb0[1].xyzx
            dp3 r0.z, v2.xyzx, cb0[2].xyzx
            dp3 r0.w, r0.xyzx, r0.xyzx
            rsq r0.w, r0.w
            mul o3.xyz, r0.wwww, r0.xyzx
            ret 
            // Approximately 21 instruction slots used
                    
        };
        GeometryShader = NULL;
        PixelShader = asm {
            //
            // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
            //
            //
            // Buffer Definitions: 
            //
            // cbuffer $Globals
            // {
            //
            //   float4x4 World;                    // Offset:    0 Size:    64 [unused]
            //   float4x4 View;                     // Offset:   64 Size:    64 [unused]
            //   float4x4 Projection;               // Offset:  128 Size:    64 [unused]
            //   
            //   struct
            //   {
            //       
            //       float4 color;                  // Offset:  192
            //       float3 dir;                    // Offset:  208
            //
            //   } light;                           // Offset:  192 Size:    28
            //   
            //   struct
            //   {
            //       
            //       float Ka;                      // Offset:  224
            //       float Kd;                      // Offset:  228
            //       float Ks;                      // Offset:  232
            //       float A;                       // Offset:  236
            //
            //   } material;                        // Offset:  224 Size:    16
            //   float4 ambientLight;               // Offset:  240 Size:    16
            //   float3 eye;                        // Offset:  256 Size:    12
            //
            // }
            //
            //
            // Resource Bindings:
            //
            // Name                                 Type  Format         Dim Slot Elements
            // ------------------------------ ---------- ------- ----------- ---- --------
            // $Globals                          cbuffer      NA          NA    0        1
            //
            //
            //
            // Input signature:
            //
            // Name                 Index   Mask Register SysValue Format   Used
            // -------------------- ----- ------ -------- -------- ------ ------
            // SV_POSITION              0   xyzw        0      POS  float       
            // POSITION                 0   xyzw        1     NONE  float   xyz 
            // TEXCOORD                 0   xy          2     NONE  float       
            // TEXCOORD                 1   xyz         3     NONE  float   xyz 
            //
            //
            // Output signature:
            //
            // Name                 Index   Mask Register SysValue Format   Used
            // -------------------- ----- ------ -------- -------- ------ ------
            // SV_Target                0   xyzw        0   TARGET  float   xyzw
            //
            ps_4_0
            dcl_constantbuffer cb0[17], immediateIndexed
            dcl_input_ps linear v1.xyz
            dcl_input_ps linear v3.xyz
            dcl_output o0.xyzw
            dcl_temps 3
            add r0.xyz, -v1.xyzx, cb0[16].xyzx
            dp3 r0.w, r0.xyzx, r0.xyzx
            rsq r0.w, r0.w
            mul r0.xyz, r0.wwww, r0.xyzx
            dp3 r0.w, v3.xyzx, v3.xyzx
            rsq r0.w, r0.w
            mul r1.xyz, r0.wwww, v3.xyzx
            dp3 r0.w, cb0[13].xyzx, r1.xyzx
            add r0.w, r0.w, r0.w
            mad r2.xyz, r1.xyzx, -r0.wwww, cb0[13].xyzx
            dp3_sat r0.w, r1.xyzx, -cb0[13].xyzx
            dp3_sat r0.x, r2.xyzx, r0.xyzx
            log r0.x, r0.x
            mul r0.x, r0.x, cb0[14].w
            exp r0.x, r0.x
            mul r0.x, r0.x, cb0[14].z
            mad r0.x, cb0[14].y, r0.w, r0.x
            mul r0.xyzw, r0.xxxx, cb0[12].xyzw
            mad o0.xyzw, cb0[14].xxxx, cb0[15].xyzw, r0.xyzw
            ret 
            // Approximately 20 instruction slots used
                    
        };
        RasterizerState = rsSolid;
    }

}

technique10 RENDER_PL_BLINNPHONG
{
    pass P0
    {
        VertexShader = asm {
            //
            // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
            //
            //
            // Buffer Definitions: 
            //
            // cbuffer $Globals
            // {
            //
            //   float4x4 World;                    // Offset:    0 Size:    64
            //   float4x4 View;                     // Offset:   64 Size:    64
            //   float4x4 Projection;               // Offset:  128 Size:    64
            //   
            //   struct
            //   {
            //       
            //       float4 color;                  // Offset:  192
            //       float3 dir;                    // Offset:  208
            //
            //   } light;                           // Offset:  192 Size:    28
            //   
            //   struct
            //   {
            //       
            //       float Ka;                      // Offset:  224
            //       float Kd;                      // Offset:  228
            //       float Ks;                      // Offset:  232
            //       float A;                       // Offset:  236
            //
            //   } material;                        // Offset:  224 Size:    16 [unused]
            //   float4 ambientLight;               // Offset:  240 Size:    16 [unused]
            //   float3 eye;                        // Offset:  256 Size:    12
            //
            // }
            //
            //
            // Resource Bindings:
            //
            // Name                                 Type  Format         Dim Slot Elements
            // ------------------------------ ---------- ------- ----------- ---- --------
            // $Globals                          cbuffer      NA          NA    0        1
            //
            //
            //
            // Input signature:
            //
            // Name                 Index   Mask Register SysValue Format   Used
            // -------------------- ----- ------ -------- -------- ------ ------
            // POSITION                 0   xyzw        0     NONE  float   xyzw
            // TEXCOORD                 0   xy          1     NONE  float   xy  
            // NORMAL                   0   xyz         2     NONE  float   xyz 
            //
            //
            // Output signature:
            //
            // Name                 Index   Mask Register SysValue Format   Used
            // -------------------- ----- ------ -------- -------- ------ ------
            // SV_POSITION              0   xyzw        0      POS  float   xyzw
            // TEXCOORD                 0   xy          1     NONE  float   xy  
            // TEXCOORD                 1   xyz         2     NONE  float   xyz 
            // TEXCOORD                 2   xyz         3     NONE  float   xyz 
            //
            vs_4_0
            dcl_constantbuffer cb0[17], immediateIndexed
            dcl_input v0.xyzw
            dcl_input v1.xy
            dcl_input v2.xyz
            dcl_output_siv o0.xyzw, position
            dcl_output o1.xy
            dcl_output o2.xyz
            dcl_output o3.xyz
            dcl_temps 2
            dp4 r0.w, v0.xyzw, cb0[3].xyzw
            dp4 r0.x, v0.xyzw, cb0[0].xyzw
            dp4 r0.y, v0.xyzw, cb0[1].xyzw
            dp4 r0.z, v0.xyzw, cb0[2].xyzw
            dp4 r1.x, r0.xyzw, cb0[4].xyzw
            dp4 r1.y, r0.xyzw, cb0[5].xyzw
            dp4 r1.z, r0.xyzw, cb0[6].xyzw
            dp4 r1.w, r0.xyzw, cb0[7].xyzw
            add r0.xyz, -r0.xyzx, cb0[16].xyzx
            dp4 o0.x, r1.xyzw, cb0[8].xyzw
            dp4 o0.y, r1.xyzw, cb0[9].xyzw
            dp4 o0.z, r1.xyzw, cb0[10].xyzw
            dp4 o0.w, r1.xyzw, cb0[11].xyzw
            mov o1.xy, v1.xyxx
            dp3 r1.x, v2.xyzx, cb0[0].xyzx
            dp3 r1.y, v2.xyzx, cb0[1].xyzx
            dp3 r1.z, v2.xyzx, cb0[2].xyzx
            dp3 r0.w, r1.xyzx, r1.xyzx
            rsq r0.w, r0.w
            mul o2.xyz, r0.wwww, r1.xyzx
            dp3 r0.w, r0.xyzx, r0.xyzx
            rsq r0.w, r0.w
            mad r0.xyz, r0.xyzx, r0.wwww, -cb0[13].xyzx
            dp3 r0.w, r0.xyzx, r0.xyzx
            rsq r0.w, r0.w
            mul o3.xyz, r0.wwww, r0.xyzx
            ret 
            // Approximately 27 instruction slots used
                    
        };
        GeometryShader = NULL;
        PixelShader = asm {
            //
            // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
            //
            //
            // Buffer Definitions: 
            //
            // cbuffer $Globals
            // {
            //
            //   float4x4 World;                    // Offset:    0 Size:    64 [unused]
            //   float4x4 View;                     // Offset:   64 Size:    64 [unused]
            //   float4x4 Projection;               // Offset:  128 Size:    64 [unused]
            //   
            //   struct
            //   {
            //       
            //       float4 color;                  // Offset:  192
            //       float3 dir;                    // Offset:  208
            //
            //   } light;                           // Offset:  192 Size:    28
            //   
            //   struct
            //   {
            //       
            //       float Ka;                      // Offset:  224
            //       float Kd;                      // Offset:  228
            //       float Ks;                      // Offset:  232
            //       float A;                       // Offset:  236
            //
            //   } material;                        // Offset:  224 Size:    16
            //   float4 ambientLight;               // Offset:  240 Size:    16
            //   float3 eye;                        // Offset:  256 Size:    12 [unused]
            //
            // }
            //
            //
            // Resource Bindings:
            //
            // Name                                 Type  Format         Dim Slot Elements
            // ------------------------------ ---------- ------- ----------- ---- --------
            // $Globals                          cbuffer      NA          NA    0        1
            //
            //
            //
            // Input signature:
            //
            // Name                 Index   Mask Register SysValue Format   Used
            // -------------------- ----- ------ -------- -------- ------ ------
            // SV_POSITION              0   xyzw        0      POS  float       
            // TEXCOORD                 0   xy          1     NONE  float       
            // TEXCOORD                 1   xyz         2     NONE  float   xyz 
            // TEXCOORD                 2   xyz         3     NONE  float   xyz 
            //
            //
            // Output signature:
            //
            // Name                 Index   Mask Register SysValue Format   Used
            // -------------------- ----- ------ -------- -------- ------ ------
            // SV_Target                0   xyzw        0   TARGET  float   xyzw
            //
            ps_4_0
            dcl_constantbuffer cb0[16], immediateIndexed
            dcl_input_ps linear v2.xyz
            dcl_input_ps linear v3.xyz
            dcl_output o0.xyzw
            dcl_temps 2
            dp3 r0.x, v3.xyzx, v3.xyzx
            rsq r0.x, r0.x
            mul r0.xyz, r0.xxxx, v3.xyzx
            dp3 r0.w, v2.xyzx, v2.xyzx
            rsq r0.w, r0.w
            mul r1.xyz, r0.wwww, v2.xyzx
            dp3_sat r0.x, r1.xyzx, r0.xyzx
            dp3_sat r0.y, r1.xyzx, -cb0[13].xyzx
            log r0.x, r0.x
            mul r0.x, r0.x, cb0[14].w
            exp r0.x, r0.x
            mul r0.x, r0.x, cb0[14].z
            mad r0.x, cb0[14].y, r0.y, r0.x
            mul r0.xyzw, r0.xxxx, cb0[12].xyzw
            mad o0.xyzw, cb0[14].xxxx, cb0[15].xyzw, r0.xyzw
            ret 
            // Approximately 16 instruction slots used
                    
        };
        RasterizerState = rsSolid;
    }

}

